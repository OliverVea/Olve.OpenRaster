name: Push to master

on:
  push:
    branches:
      - master

permissions:
  actions: read
  pages: write
  id-token: write

concurrency:
  group: "deploy"
  cancel-in-progress: false

jobs:
  test:
    name: Run tests
    if: "!startsWith(github.event.head_commit.message, 'bump:')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.104

      - name: .NET restore
        shell: bash
        run: |
          dotnet restore
          dotnet tool restore

      - name: Build
        shell: bash
        run: dotnet build --no-restore -c Release /p:Version="1.0.0"

      - name: Test
        shell: bash
        run: dotnet test --no-restore --no-build -c Release

  bump-version:
    name: Bump version and create changelog with commitizen
    needs:
      - test
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.cz.outputs.version }}
      changed: ${{ steps.version-changed.outputs.changed }}

    steps:
      - name: Check out
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: "${{ secrets.PERSONAL_ACCESS_TOKEN }}"

      - id: cz
        name: Create bump and changelog
        uses: commitizen-tools/commitizen-action@master
        with:
          github_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - id: version-changed
        name: Check if version changed
        run: |
          [[ $REVISION = $PREVIOUS_REVISION ]] && CHANGED="false" || CHANGED="true"
          echo "changed=$CHANGED" >> "$GITHUB_OUTPUT"
          [[ $CHANGED = "true" ]] && echo "::notice::Version changed ($PREVIOUS_REVISION -> $REVISION)" || echo "::notice::Version did not change"

      - name: Release
        id: release
        uses: softprops/action-gh-release@v2
        if: "${{ steps.version-changed.outputs.changed == 'true' }}"
        with:
          body_path: ${{ github.workspace }}/CHANGELOG.md
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          tag_name: v${{ steps.cz.outputs.version }}

      - name: Echo release id
        if: "${{ steps.version-changed.outputs.changed == 'true' }}"
        run: echo "::notice::id=${{ steps.release.outputs.id }}"

  publish-olve-openraster:
    name: Publish Olve.OpenRaster to NuGet
    needs:
      - bump-version
    if: "${{ needs.bump-version.outputs.changed == 'true' }}"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Publish Olve.OpenRaster to NuGet
      uses: ./.github/actions/dotnet-publish
      with:
        project: ./Olve.OpenRaster
        package-name: Olve.OpenRaster
        version: ${{ needs.bump-version.outputs.version }}
        nuget-api-key: ${{ secrets.NUGET_API_KEY }}
